# This is a basic workflow that is manually triggered.
# It would be used execute onetimer/manual tasks.
name: Staging - Custom tasks

on:
  workflow_dispatch:
    inputs:
      task_name:
        description: 'Provide name of the task with namespace (eg: custom_task:create_sample_articles)'
        required: true
#      xxt_all:
#        description: 'xxt-all'
#        required: false
#        type: boolean
      sgt_core:
        description: 'sgt-core'
        required: false
        type: boolean
      myt_core:
        description: 'myt-core'
        required: false
        type: boolean
      hkt_core:
        description: 'hkt-core'
        required: false
        type: boolean
#      xxtup_all:
#        description: 'xxtup-all'
#        required: false
#        type: boolean
      sgtup_core:
        description: 'sgtup-core'
        required: false
        type: boolean
      mytup_core:
        description: 'mytup-core'
        required: false
        type: boolean
      hktup_core:
        description: 'hktup-core'
        required: false
        type: boolean
      sandbox2_core:
        description: 'sandbox2.cardup.co'
        required: false
        type: boolean
      sgscan_core:
        description: 'sgscan-core'
        required: false
        type: boolean

jobs:
  execute_task:
    name: Custom task execution
    runs-on: ubuntu-latest
    concurrency: staging_environment
    environment: staging
    env:
      # Servers
      STAGING_SERVER_IP_ONE: ${{ secrets.SG_STAGING_SERVER_IP_ONE }}
      STAGING_SERVER_IP_TWO: ${{ secrets.SG_STAGING_SERVER_IP_TWO }}
      # User inputs
      #XXT_ALL: ${{ github.event.inputs.xxt_all }}
      SGT: ${{ github.event.inputs.sgt_core }}
      MYT: ${{ github.event.inputs.myt_core }}
      HKT: ${{ github.event.inputs.hkt_core }}
      #XXTUP_ALL: ${{ github.event.inputs.xxtup_all }}
      SGTUP: ${{ github.event.inputs.sgtup_core }}
      MYTUP: ${{ github.event.inputs.mytup_core }}
      HKTUP: ${{ github.event.inputs.hktup_core }}
      SANDBOX2: ${{ github.event.inputs.sandbox2_core }}
      SGSCAN: ${{ github.event.inputs.sgscan_core }}

    steps:
      - name: Install Github actions key to runner
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY_GITHUB_ACTIONS }}
          name: github-actions
          known_hosts: unnecessary

      - name: Checkout the source code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.6
          bundler-cache: true

      - name: "Executing custom task on staging:: ${{ github.event.inputs.task_name }}"
        working-directory:
        run: |
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/github-actions
          bundle exec cap staging deploy:execute_custom_task["${{ github.event.inputs.task_name }}"]
